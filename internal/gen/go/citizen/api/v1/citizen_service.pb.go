// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: citizen/api/v1/citizen_service.proto

package apiv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MatchType int32

const (
	MatchType_MATCH_TYPE_UNSPECIFIED    MatchType = 0
	MatchType_MATCH_TYPE_BY_DOCUMENT_ID MatchType = 1
	MatchType_MATCH_TYPE_BY_NAME        MatchType = 2
)

// Enum value maps for MatchType.
var (
	MatchType_name = map[int32]string{
		0: "MATCH_TYPE_UNSPECIFIED",
		1: "MATCH_TYPE_BY_DOCUMENT_ID",
		2: "MATCH_TYPE_BY_NAME",
	}
	MatchType_value = map[string]int32{
		"MATCH_TYPE_UNSPECIFIED":    0,
		"MATCH_TYPE_BY_DOCUMENT_ID": 1,
		"MATCH_TYPE_BY_NAME":        2,
	}
)

func (x MatchType) Enum() *MatchType {
	p := new(MatchType)
	*p = x
	return p
}

func (x MatchType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MatchType) Descriptor() protoreflect.EnumDescriptor {
	return file_citizen_api_v1_citizen_service_proto_enumTypes[0].Descriptor()
}

func (MatchType) Type() protoreflect.EnumType {
	return &file_citizen_api_v1_citizen_service_proto_enumTypes[0]
}

func (x MatchType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MatchType.Descriptor instead.
func (MatchType) EnumDescriptor() ([]byte, []int) {
	return file_citizen_api_v1_citizen_service_proto_rawDescGZIP(), []int{0}
}

type Location struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Country      string  `protobuf:"bytes,1,opt,name=country,proto3" json:"country,omitempty"`
	State        string  `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	Municipality string  `protobuf:"bytes,3,opt,name=municipality,proto3" json:"municipality,omitempty"`
	Parish       string  `protobuf:"bytes,4,opt,name=parish,proto3" json:"parish,omitempty"`
	LocationId   string  `protobuf:"bytes,5,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	Latitude     float64 `protobuf:"fixed64,6,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude    float64 `protobuf:"fixed64,7,opt,name=longitude,proto3" json:"longitude,omitempty"`
}

func (x *Location) Reset() {
	*x = Location{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citizen_api_v1_citizen_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Location) ProtoMessage() {}

func (x *Location) ProtoReflect() protoreflect.Message {
	mi := &file_citizen_api_v1_citizen_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Location.ProtoReflect.Descriptor instead.
func (*Location) Descriptor() ([]byte, []int) {
	return file_citizen_api_v1_citizen_service_proto_rawDescGZIP(), []int{0}
}

func (x *Location) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Location) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Location) GetMunicipality() string {
	if x != nil {
		return x.Municipality
	}
	return ""
}

func (x *Location) GetParish() string {
	if x != nil {
		return x.Parish
	}
	return ""
}

func (x *Location) GetLocationId() string {
	if x != nil {
		return x.LocationId
	}
	return ""
}

func (x *Location) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *Location) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

type DocumentID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number   string    `protobuf:"bytes,1,opt,name=number,proto3" json:"number,omitempty"`
	Location *Location `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *DocumentID) Reset() {
	*x = DocumentID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citizen_api_v1_citizen_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocumentID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentID) ProtoMessage() {}

func (x *DocumentID) ProtoReflect() protoreflect.Message {
	mi := &file_citizen_api_v1_citizen_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentID.ProtoReflect.Descriptor instead.
func (*DocumentID) Descriptor() ([]byte, []int) {
	return file_citizen_api_v1_citizen_service_proto_rawDescGZIP(), []int{1}
}

func (x *DocumentID) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *DocumentID) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

type Citizen struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Documents []*DocumentID `protobuf:"bytes,2,rep,name=documents,proto3" json:"documents,omitempty"`
}

func (x *Citizen) Reset() {
	*x = Citizen{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citizen_api_v1_citizen_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Citizen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Citizen) ProtoMessage() {}

func (x *Citizen) ProtoReflect() protoreflect.Message {
	mi := &file_citizen_api_v1_citizen_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Citizen.ProtoReflect.Descriptor instead.
func (*Citizen) Descriptor() ([]byte, []int) {
	return file_citizen_api_v1_citizen_service_proto_rawDescGZIP(), []int{2}
}

func (x *Citizen) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Citizen) GetDocuments() []*DocumentID {
	if x != nil {
		return x.Documents
	}
	return nil
}

type FindCitizenResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Citizen   *Citizen  `protobuf:"bytes,1,opt,name=citizen,proto3" json:"citizen,omitempty"`
	MatchType MatchType `protobuf:"varint,2,opt,name=match_type,json=matchType,proto3,enum=shipment.api.v1.MatchType" json:"match_type,omitempty"`
}

func (x *FindCitizenResult) Reset() {
	*x = FindCitizenResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citizen_api_v1_citizen_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindCitizenResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindCitizenResult) ProtoMessage() {}

func (x *FindCitizenResult) ProtoReflect() protoreflect.Message {
	mi := &file_citizen_api_v1_citizen_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindCitizenResult.ProtoReflect.Descriptor instead.
func (*FindCitizenResult) Descriptor() ([]byte, []int) {
	return file_citizen_api_v1_citizen_service_proto_rawDescGZIP(), []int{3}
}

func (x *FindCitizenResult) GetCitizen() *Citizen {
	if x != nil {
		return x.Citizen
	}
	return nil
}

func (x *FindCitizenResult) GetMatchType() MatchType {
	if x != nil {
		return x.MatchType
	}
	return MatchType_MATCH_TYPE_UNSPECIFIED
}

type FindCitizenByDocIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DocumentId string `protobuf:"bytes,1,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
}

func (x *FindCitizenByDocIdRequest) Reset() {
	*x = FindCitizenByDocIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citizen_api_v1_citizen_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindCitizenByDocIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindCitizenByDocIdRequest) ProtoMessage() {}

func (x *FindCitizenByDocIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_citizen_api_v1_citizen_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindCitizenByDocIdRequest.ProtoReflect.Descriptor instead.
func (*FindCitizenByDocIdRequest) Descriptor() ([]byte, []int) {
	return file_citizen_api_v1_citizen_service_proto_rawDescGZIP(), []int{4}
}

func (x *FindCitizenByDocIdRequest) GetDocumentId() string {
	if x != nil {
		return x.DocumentId
	}
	return ""
}

type FindCitizenByDocIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*FindCitizenResult `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *FindCitizenByDocIdResponse) Reset() {
	*x = FindCitizenByDocIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_citizen_api_v1_citizen_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindCitizenByDocIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindCitizenByDocIdResponse) ProtoMessage() {}

func (x *FindCitizenByDocIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_citizen_api_v1_citizen_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindCitizenByDocIdResponse.ProtoReflect.Descriptor instead.
func (*FindCitizenByDocIdResponse) Descriptor() ([]byte, []int) {
	return file_citizen_api_v1_citizen_service_proto_rawDescGZIP(), []int{5}
}

func (x *FindCitizenByDocIdResponse) GetResults() []*FindCitizenResult {
	if x != nil {
		return x.Results
	}
	return nil
}

var File_citizen_api_v1_citizen_service_proto protoreflect.FileDescriptor

var file_citizen_api_v1_citizen_service_proto_rawDesc = []byte{
	0x0a, 0x24, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x22, 0xd1, 0x01, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x6c, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x75, 0x6e, 0x69,
	0x63, 0x69, 0x70, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x69,
	0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x69, 0x73, 0x68,
	0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x22, 0x5b, 0x0a, 0x0a, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x35, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x58, 0x0a, 0x07, 0x43, 0x69, 0x74, 0x69,
	0x7a, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x09, 0x64, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x68, 0x69,
	0x70, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x52, 0x09, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x22, 0x82, 0x01, 0x0a, 0x11, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x69, 0x74, 0x69, 0x7a,
	0x65, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x32, 0x0a, 0x07, 0x63, 0x69, 0x74, 0x69,
	0x7a, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x68, 0x69, 0x70,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x69, 0x74, 0x69,
	0x7a, 0x65, 0x6e, 0x52, 0x07, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x12, 0x39, 0x0a, 0x0a,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1a, 0x2e, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x22, 0x3c, 0x0a, 0x19, 0x46, 0x69, 0x6e, 0x64, 0x43,
	0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x42, 0x79, 0x44, 0x6f, 0x63, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x5a, 0x0a, 0x1a, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x69, 0x74,
	0x69, 0x7a, 0x65, 0x6e, 0x42, 0x79, 0x44, 0x6f, 0x63, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x69, 0x74, 0x69, 0x7a,
	0x65, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x2a, 0x5e, 0x0a, 0x09, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a,
	0x0a, 0x16, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19, 0x4d, 0x41,
	0x54, 0x43, 0x48, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x59, 0x5f, 0x44, 0x4f, 0x43, 0x55,
	0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x49, 0x44, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x4d, 0x41, 0x54,
	0x43, 0x48, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x59, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x10,
	0x02, 0x32, 0x7f, 0x0a, 0x0e, 0x43, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x6d, 0x0a, 0x12, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x69, 0x74, 0x69, 0x7a,
	0x65, 0x6e, 0x42, 0x79, 0x44, 0x6f, 0x63, 0x49, 0x64, 0x12, 0x2a, 0x2e, 0x73, 0x68, 0x69, 0x70,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6e, 0x64,
	0x43, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x42, 0x79, 0x44, 0x6f, 0x63, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x69, 0x74, 0x69,
	0x7a, 0x65, 0x6e, 0x42, 0x79, 0x44, 0x6f, 0x63, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0xcb, 0x01, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x68, 0x69, 0x70, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x42, 0x13, 0x43, 0x69, 0x74, 0x69,
	0x7a, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50,
	0x01, 0x5a, 0x41, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x45, 0x69,
	0x74, 0x6f, 0x6c, 0x2f, 0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x2f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f,
	0x63, 0x69, 0x74, 0x69, 0x7a, 0x65, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x3b, 0x61,
	0x70, 0x69, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x53, 0x41, 0x58, 0xaa, 0x02, 0x0f, 0x53, 0x68, 0x69,
	0x70, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0f, 0x53,
	0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5c, 0x41, 0x70, 0x69, 0x5c, 0x56, 0x31, 0xe2, 0x02,
	0x1b, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5c, 0x41, 0x70, 0x69, 0x5c, 0x56, 0x31,
	0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x11, 0x53,
	0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x3a, 0x3a, 0x41, 0x70, 0x69, 0x3a, 0x3a, 0x56, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_citizen_api_v1_citizen_service_proto_rawDescOnce sync.Once
	file_citizen_api_v1_citizen_service_proto_rawDescData = file_citizen_api_v1_citizen_service_proto_rawDesc
)

func file_citizen_api_v1_citizen_service_proto_rawDescGZIP() []byte {
	file_citizen_api_v1_citizen_service_proto_rawDescOnce.Do(func() {
		file_citizen_api_v1_citizen_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_citizen_api_v1_citizen_service_proto_rawDescData)
	})
	return file_citizen_api_v1_citizen_service_proto_rawDescData
}

var file_citizen_api_v1_citizen_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_citizen_api_v1_citizen_service_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_citizen_api_v1_citizen_service_proto_goTypes = []interface{}{
	(MatchType)(0),                     // 0: shipment.api.v1.MatchType
	(*Location)(nil),                   // 1: shipment.api.v1.Location
	(*DocumentID)(nil),                 // 2: shipment.api.v1.DocumentID
	(*Citizen)(nil),                    // 3: shipment.api.v1.Citizen
	(*FindCitizenResult)(nil),          // 4: shipment.api.v1.FindCitizenResult
	(*FindCitizenByDocIdRequest)(nil),  // 5: shipment.api.v1.FindCitizenByDocIdRequest
	(*FindCitizenByDocIdResponse)(nil), // 6: shipment.api.v1.FindCitizenByDocIdResponse
}
var file_citizen_api_v1_citizen_service_proto_depIdxs = []int32{
	1, // 0: shipment.api.v1.DocumentID.location:type_name -> shipment.api.v1.Location
	2, // 1: shipment.api.v1.Citizen.documents:type_name -> shipment.api.v1.DocumentID
	3, // 2: shipment.api.v1.FindCitizenResult.citizen:type_name -> shipment.api.v1.Citizen
	0, // 3: shipment.api.v1.FindCitizenResult.match_type:type_name -> shipment.api.v1.MatchType
	4, // 4: shipment.api.v1.FindCitizenByDocIdResponse.results:type_name -> shipment.api.v1.FindCitizenResult
	5, // 5: shipment.api.v1.CitizenService.FindCitizenByDocId:input_type -> shipment.api.v1.FindCitizenByDocIdRequest
	6, // 6: shipment.api.v1.CitizenService.FindCitizenByDocId:output_type -> shipment.api.v1.FindCitizenByDocIdResponse
	6, // [6:7] is the sub-list for method output_type
	5, // [5:6] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_citizen_api_v1_citizen_service_proto_init() }
func file_citizen_api_v1_citizen_service_proto_init() {
	if File_citizen_api_v1_citizen_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_citizen_api_v1_citizen_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Location); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citizen_api_v1_citizen_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocumentID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citizen_api_v1_citizen_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Citizen); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citizen_api_v1_citizen_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindCitizenResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citizen_api_v1_citizen_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindCitizenByDocIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_citizen_api_v1_citizen_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindCitizenByDocIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_citizen_api_v1_citizen_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_citizen_api_v1_citizen_service_proto_goTypes,
		DependencyIndexes: file_citizen_api_v1_citizen_service_proto_depIdxs,
		EnumInfos:         file_citizen_api_v1_citizen_service_proto_enumTypes,
		MessageInfos:      file_citizen_api_v1_citizen_service_proto_msgTypes,
	}.Build()
	File_citizen_api_v1_citizen_service_proto = out.File
	file_citizen_api_v1_citizen_service_proto_rawDesc = nil
	file_citizen_api_v1_citizen_service_proto_goTypes = nil
	file_citizen_api_v1_citizen_service_proto_depIdxs = nil
}
